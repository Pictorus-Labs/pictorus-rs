[package]
name = "pictorus-stm32"
edition = "2024"
description = "STM32 implementations of Pictorus traits."
version = "0.0.0"
license.workspace = true
homepage.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true

[dependencies]
pictorus-blocks = { path = "../pictorus-blocks", version = "0.0.0" }
pictorus-traits = { path = "../pictorus-traits", version = "0.0.0" }
pictorus-internal = { path = "../pictorus-internal", version = "0.0.0" }
embedded-time = "0.12.1"
embedded-hal = "1.0.0"
embedded-hal-02 = { package = "embedded-hal", version = "0.2.6", features = [
  "unproven",
] }
embedded-io = "0.6.1"
embassy-futures = { git = "https://github.com/embassy-rs/embassy.git", rev = "68c8238" }
embassy-stm32 = { git = "https://github.com/embassy-rs/embassy.git", rev = "68c8238" }
embassy-time = { git = "https://github.com/embassy-rs/embassy.git", rev = "68c8238" }
embedded-io-async = "0.6.1"
heapless = "0.8.0"
rtt-target = { git = "https://github.com/Pictorus-Labs/rtt-target", branch = "alignment-fix" }
embedded-can = { version = "0.4.1", optional = true }
nb = { version = "1.1.0", optional = true }
log = "0.4.21"

[features]
fdcan = ["dep:embedded-can", "dep:nb"]
can = ["dep:embedded-can", "dep:nb"]
spi = []
dac = []
adc = []
interrupt-uart = []
# These are only intended to simplify tests. The can and fdcan features are mutually
# exclusive, and the interrupt-uart flag toggles between 2 implementations of UART. This is
# unavoidable due to the way embassy-stm32 generates its HAL. Depending on the target,
# only certain structs are included in the generated code, so trying to include both CAN impls
# or both UART impls will result in a compile error. In addition, the embassy-stm32 crate
# needs a target set or it will fail to compile. This means we cannot build this crate
# with the --all-features flag. Instead, tooling can run both `cargo check --features _std_can_std_uart`
# and `cargo check --features _fdcan_interrupt_uart` to test all the options.
_core_protos = ["spi", "dac", "adc"]
_std_can_std_uart = ["embassy-stm32/stm32f429zi", "can"]
_fdcan_interrupt_uart = ["embassy-stm32/stm32u5a5zj", "fdcan", "interrupt-uart"]
